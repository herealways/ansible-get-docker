- name: check distribution and set vars
  block:
    - set_fact:
        use_yum: true
        centos7: true
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '7'

# currently there are some problems for centos8, like broken dns for container
    - set_fact:
        use_dnf: true
        centos8: true
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '8' 

    - set_fact:
        use_dnf: true
        fedora: true
        fedora30: true
      when: ansible_distribution == "Fedora"

    - name: install python3 for centos8
      raw: "dnf -y install python3"
      when: centos8 is defined

    - name: use python3 interpreter for fedora30 and centos8
      set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: fedora is defined or centos8 is defined

- name: install Docker's dependencies
  block:
    - name: install docker's dependencies (yum)
      yum:
        name: "{{docker_package_dependencies_centos}}"
      when: use_yum is defined

    - name: install docker's dependencies (dnf)
      dnf:
        name: "{{docker_package_dependencies_fedora}}"
      when: use_dnf is defined

# should use ansible module
- name: configure Docker's upstream repository 
  block:
    - shell: "yum-config-manager --add-repo {{docker_upstream_repo_centos}}"
      when: use_yum is defined

    - shell: "dnf config-manager --add-repo {{docker_upstream_repo_centos}}"
      when: centos8 is defined

    - shell: "dnf config-manager --add-repo {{docker_upstream_repo_fedora}}"
      when: fedora is defined

- name: install Docker
  block:
    - name: install Docker on centos7
      yum:
        name: "{{item}}"
        state: "present"
      loop:
        - "docker-{{ docker_version_centos | d('ce') }}"
        - "docker-ce-cli"
        - "containerd.io"
      when: use_yum is defined

    # See https://linuxconfig.org/how-to-install-docker-in-rhel-8
    - name: install Docker on centos8
      dnf:
        name: "{{item}}"
        state: "present"
        skip_broken: yes
      loop:
        - "docker-ce-cli"
        - "containerd.io"
        - "docker-{{ docker_version_centos8 | d('ce') }}"
      when: centos8 is defined

    - name: install Docker on fedora
      dnf:
        name: "{{item}}"
        state: "present"
      loop:
        - "docker-{{ docker_version_fedora | d('ce') }}"
        - "docker-ce-cli"
        - "containerd.io"
      when: fedora is defined

# See https://serverfault.com/questions/987686/no-network-connectivity-to-from-docker-ce-container-on-centos-8
- name: Add masquerading in firewall-cmd fix container broken dns
  firewalld:
    masquerade: yes
    zone: public
    state: enabled
    permanent: yes
    immediate: yes
  when: centos8 is defined

- name: enable docker
  service:
    name: docker
    enabled: yes
    state: started

- name: add users to docker group
  user:
    name: "{{item}}"
    groups: "docker"
    append: true
  loop: "{{ docker_users }}"
  when: docker_users is defined

- name: configure docker daemon files
  template:
    src: "etc/docker/daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    mode: "0644"
    owner: "root"
    group: "root"
  when: docker_set_daemon_file == true
  notify: ["restart docker"]


- name: add certificates
  copy:
    src: "templates/etc/docker/certs.d"
    dest: "/etc/docker/"
    owner: "root"
    group: "root"
  when: docker_use_certificates == true

- name: make sure Docker SDK for python and docker-compose is installed
  block:
  - name: add epel repository for centos7
    yum:
      name: epel-release
      state: present
    when: use_yum is defined

  - name: make sure python3 is installed(yum)
    yum:
      name: python3
      state: present
    when: use_yum is defined

  - name: make sure python3 is installed(dnf)
    dnf:
      name: python3
      state: present
    when: use_dnf is defined

  
  - name: change python interpreter to python3 for centos7
    set_fact:
      ansible_python_interpreter: /usr/bin/python3
    when: centos7 is defined

  - name: install Docker SDK and docker-compose
    pip:
      name: 
      - docker
      - docker-compose
      - selinux  # Centos7 doesn't have libselinux-python for python3 by default
      executable: pip3

# A Very strange bug in Vagrant happend in my environment:
# Cannot resolve docker registry until restart docker daemon
- name: restart docker to fix vagrant broken dns to docker registry
  systemd:
    service: docker
    state: restarted

- name: test docker
  docker_container:
    name: hello
    image: hello-world
    auto_remove: yes

- name: manage docker registry login credentials
  docker_login:
    registry_url: "{{docker_registry.registry_url | d(omit)}}"
    username: "{{docker_registry.username}}"
    password: "{{docker_registry.password}}"
    email: "{{docker_registry.email | d(omit)}}"
    reauthorize: "{{docker_registry.reauthorize | d(omit)}}"
    config_path: "{{docker_registry.config_path  | d(omit)}}"
    state: "{{docker_registry.state  | d('present')}}"
  when: docker_set_login_credentials == true and docker_use_certificates == false

# To ensure subsequent yum module work normally on centos7
- name: change python interpreter from python3 to 2 for centos7
  set_fact:
    ansible_python_interpreter: /usr/bin/python
  when: centos7 is defined

